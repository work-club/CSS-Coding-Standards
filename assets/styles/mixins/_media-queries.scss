$break-desktop: 768px;
$break-desktop-large: 960px;
$break-widescreen: 1600px;

@mixin respond-to($media) {
	@if $media == desktop {
		@media only screen and (min-width: $break-desktop) { @content; }
	}
	@if $media == widescreen {
		@media only screen and (min-width: $break-widescreen) { @content; }
	}
  @if $media == desktop-large {
    @media only screen and (min-width: $break-desktop-large) { @content; }
  }
  //Custom media query
  //product.scss - .tag (980px)
}

// http://compass-style.org/reference/compass/helpers/sprites/
@mixin get-sprite($map, $sprite, $repeat: no-repeat, $height: true, $width: true)
{
  //http://compass-style.org/reference/compass/helpers/sprites/#sprite-file
  $sprite-image: sprite-file($map, $sprite);

  // http://compass-style.org/reference/compass/helpers/sprites/#sprite-url
  $sprite-map: sprite-url($map);

  // http://compass-style.org/reference/compass/helpers/sprites/#sprite-position
  $sprite-position: sprite-position($map, $sprite);

  // Returns background
  background: $sprite-map $sprite-position $repeat;

  // http://compass-style.org/reference/compass/helpers/image-dimensions/
  // Checks to see if the user wants height returned
  @if ($height == true) {
    // Gets the height of the sprite-image
    $sprite-height: image-height($sprite-image);
    // Returns the height
    height: $sprite-height;
  }
  // http://compass-style.org/reference/compass/helpers/image-dimensions/
  // Checks to see if the user wants height returned
  @if($width == true) {
    // Gets the height of the sprite-image
    $sprite-width: image-width($sprite-image);
    // Returns the width
    width: $sprite-width;
    }
}